# Kickstart file to deploy Rocky9 in a STIG Ready configuation.
# All content is provided as-is and without warranty.
# Authored by Daren, Customer Success Manger for Anchore.
# https://www.anchore.com
# Created for quick deployment of STIG Ready Lab environments.
# 
#version=Rocky Linux 9

# INSTALL USING TEXT MODE
text

# Configure Install Sources
url                          --mirrorlist="https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&repo=BaseOS-9.5&country=us"
repo --name=Extras-9.5       --mirrorlist="https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&repo=extras-9.5&country=US"
repo --name=AppStream-9.5    --mirrorlist="https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&repo=AppStream-9.5&country=US"
repo --name=CRB-9.5          --mirrorlist="https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&repo=CRB-9.5&country=US"

# KEYBOARDS, LANGUAGES, TIMEZONE
lang en_US.UTF-8
keyboard us
timezone UTC --utc

# Hostname and Network Configuration
network --hostname='rl9-sr-lab'
network --bootproto=dhcp --onboot=on --noipv6 --activate

# Root and User Configuration (hashed passwords)
# Replace with secure hashes for production use
rootpw --iscrypted $6$U8gF5wEHDlx.DL53$KQd01G2g2IBeUA0YG6TJdgDUDKtLsZE.LI3Q5uBHhc/WepOY9mEB7pMKLbuGA5HIEDZiKd6OnxaxJhTd.HGvM0 --lock
user --name=rocky   --iscrypted --password $6$RcNvEX9wzWZQg5i3$mGWRDD7PK2x4JxtSakEamqW.zOegDV6F6Z24V0.chJ1L.aszxpIJxU1u6IXhMw1htPKoY0820kdeM/dKySBcw/ --groups=wheel --shell=/bin/bash

# Partitioning and LVM setup (Unencrypted)
# Clean disks
ignoredisk --only-use=sda
zerombr
clearpart --all --initlabel --disklabel=gpt
bootloader --location=mbr --boot-drive=sda --append='crashkernel=auto'

# Configure UEFI and Boot Partitions
part /boot/efi          --fstype=efi --asprimary    --label=FIRMWARE       --size=1024
part /boot              --fstype=xfs --asprimary    --label=BOOT           --size=1024  --fsoptions="nodev,nosuid"

# Configure PV, VG, and LVM
# 25GB Minimum, Additional space will automatically go into var/lib
part pv.00              --label=VOLUMES --grow --asprimary                  --size=22528
volgroup vg.00 pv.00
logvol swap             --fstype=swap --vgname=vg.00 --name=lv_swap         --size=1024  #--fsoptions=""
logvol /                --fstype=xfs  --vgname=vg.00 --name=lv_root         --size=4096  #--fsoptions=""
logvol /home            --fstype=xfs  --vgname=vg.00 --name=lv_home         --size=3072  --fsoptions="nodev,noexec,nosuid"
logvol /tmp             --fstype=xfs  --vgname=vg.00 --name=lv_tmp          --size=2048  --fsoptions="nodev,noexec,nosuid"
logvol /var             --fstype=xfs  --vgname=vg.00 --name=lv_var          --size=3072  --fsoptions="nodev"
logvol /var/log         --fstype=xfs  --vgname=vg.00 --name=lv_varlog       --size=2048  --fsoptions="nodev,noexec,nosuid"
logvol /var/log/audit   --fstype=xfs  --vgname=vg.00 --name=lv_varlogaudit  --size=2048  --fsoptions="nodev,noexec,nosuid"
logvol /var/tmp         --fstype=xfs  --vgname=vg.00 --name=lv_vartmp       --size=2048  --fsoptions="nodev,noexec,nosuid"
logvol /var/lib         --fstype=xfs  --vgname=vg.00 --name=lv_varlib       --size=3072  --fsoptions="nodev"

# Packages
%packages --retries=5 --timeout=20 --inst-langs=en

# Installation Environment
@^minimal-environment

# Management Packages
#cloud-init                # allows the use of cloud-init configuraiton management
epel-release             # enables the epel-release registry
open-vm-tools            # installs tools needed for running as a guest on a hypervisor
perl                      # allows the use of perl which is required by vmware guest customization scripts

# Security Packages
audit                   # needed for openscap
mkpasswd                # used to generate hashed passwords
scap-security-guide     # used to apply and audit STIG profile
openscap-scanner        # used to apply and audit STIG profile

# Cockpit Packages
cockpit                 # cockpit web mfui for management
cockpit-bridge          # cockpit plugin 
cockpit-files           # cockpit plugin for file management
cockpit-networkmanager  # cockpit plugin for network management
cockpit-ostree          # cockpit plugin 
cockpit-packagekit      # cockpit plugin 
cockpit-pcp             # cockpit plugin 
cockpit-sosreport       # cockpit plugin
cockpit-storaged        # cockpit plugin for storage management

# Commandline Tools
curl
nano
tar

%end

# System and Security Settings
firewall --enabled --service=cockpit --service=ssh

services --enabled=cockpit.socket,pmlogger.service,sshd.service
services --disabled=irqbalance.service,postfix,rescue.service,sssd.service
selinux  --enforcing

# Security policy
%addon com_redhat_oscap
    content-type = scap-security-guide
    profile = xccdf_org.ssgproject.content_profile_stig
%end

# Post-Installation Script
%post --interpreter=/usr/bin/bash

# Add webmin repo
curl https://raw.githubusercontent.com/webmin/webmin/master/webmin-setup-repo.sh -o /root/webmin-setup-repo.sh
sh /root/webmin-setup-repo.sh --force

# Update All Installed Packages
/usr/bin/dnf update -y

# Install Webmin
/usr/bin/dnf install webmin -y

# Configure Webmin User
echo "rocky:x:0" > /etc/webmin/miniserv.users
echo "rocky: acl adsl-client apache at backup-config bacula-backup bandwidth bind8 change-user cluster-copy cluster-cron cluster-passwd cluster-shell cluster-software cluster-useradmin cluster-usermin cluster-webmin cpan cron custom dfsadmin dhcpd dovecot exim exports fail2ban fdisk fetchmail filemin filter firewall firewall6 firewalld fsdump heartbeat htaccess-htpasswd idmapd inetd init inittab ipfilter ipfw ipsec iscsi-client iscsi-server iscsi-target iscsi-tgtd krb5 ldap-client ldap-server ldap-useradmin logrotate logviewer lpadmin lvm mailboxes mailcap man mount mysql net nis openslp package-updates pam pap passwd phpini postfix postgresql ppp-client pptp-client pptp-server proc procmail proftpd qmailadmin quota raid samba sarg sendmail servers shell shorewall shorewall6 smart-status smf software spam squid sshd status stunnel syslog-ng syslog system-status tcpwrappers time tunnel updown useradmin usermin webalizer webmin webmincron webminlog xinetd xterm" > /etc/webmin/webmin.acl

# Allow Webmin through firewalld
firewall-offline-cmd --new-service=webmin
firewall-offline-cmd --service=webmin --set-description="Webmin Default Port"
firewall-offline-cmd --service=webmin --set-short=webmin
firewall-offline-cmd --service=webmin --add-port=10000/tcp
firewall-offline-cmd --service=webmin

# Clean Up Unneeded Packages
/usr/bin/dnf autoremove -y
/usr/bin/dnf clean all

# Enable FIPS mode
/usr/bin/fips-mode-setup --enable

# Enable VMware Legacy Customization
if [ -x /usr/bin/vmware-toolbox-cmd ]; then
    /usr/bin/vmware-toolbox-cmd config set deployPkg enable-custom-scripts true
fi

# Download, install and run the expand_lvm script
CURL_SCRIPT='/usr/bin/expand_lvm'
CURL_SOURCE='https://raw.githubusercontent.com/Daren-42/kss/refs/heads/main/hs/expand_lvm.sh'
curl -sfL $CURL_SOURCE --output "$CURL_SCRIPT"
chmod 744 "$CURL_SCRIPT"

# Expand the var lib LVM since this is where all most application data is stored
expand_lvm lv_root   +25%FREE
expand_lvm lv_home   +50%FREE
expand_lvm lv_varlib +100%FREE


### Start STIG Softening for Lab ###
# Configuration between region markers will ease STIG password and timeout requirements
# to softten the configuration to make Lab use a bit more forgiving.
# To deploy a hardened STIG deployment, remove this region from the kickstart file.

# Disable Password Expriation for Management users
/usr/bin/chage -M 99999 -m 0 -W 0 rocky

# Update MOTD (Lab Environment)
  {
    echo 'RedHat DISA STIG security profile has been applied to this machine.'
    echo 'Unauthorized use of this system is prohibited.'
    echo ''
    echo 'NOTE: Some policies have been modified for use in this Lab Environment.'
    echo ''
  } > /etc/issue

# Definition of the settings update function used in the post configuration process
update_setting() {
    local file="$1"
    local setting="$2"
    local value="$3"

    if grep -qE "^\s*${setting}\s*=" "$file"; then
        # Update the setting if it's separated by an equals sign
        sudo sed -i "s|^\s*${setting}\s*=.*|${setting}=${value}|" "$file"
    elif grep -qE "^\s*${setting}\s" "$file"; then
        # Update the setting if it's separated by a space
        sudo sed -i "s|^\s*${setting}\s.*|${setting} ${value}|" "$file"
    else
        # Add the setting if it doesn't exist
        echo "${setting}=${value}" | sudo tee -a "$file" > /dev/null
    fi
}

# Update /etc/security/pwquality.conf and pam.d files with password complexity settings (Lab Environment)
  MINLEN=8
  DCREDIT=1
  UCREDIT=1
  LCREDIT=1
  OCREDIT=1
  MAXREPEAT=4
  MAXCLASSREPEAT=8

  for pam_file in /etc/pam.d/system-auth /etc/pam.d/password-auth; do
      if [[ -f $pam_file ]]; then
          if grep -q "pam_pwquality.so" "$pam_file"; then
              sed -i "s|.*pam_pwquality.so.*|password requisite pam_pwquality.so retry=3 minlen=$MINLEN dcredit=$DCREDIT ucredit=$UCREDIT lcredit=$LCREDIT ocredit=$OCREDIT|" "$pam_file"
          fi
      fi
  done

  update_setting "/etc/security/pwquality.conf" "minlen" "$MINLEN"
  update_setting "/etc/security/pwquality.conf" "dcredit" "$DCREDIT"
  update_setting "/etc/security/pwquality.conf" "ucredit" "$UCREDIT"
  update_setting "/etc/security/pwquality.conf" "lcredit" "$LCREDIT"
  update_setting "/etc/security/pwquality.conf" "ocredit" "$OCREDIT"
  update_setting "/etc/security/pwquality.conf" "maxrepeat" "$MAXREPEAT"
  update_setting "/etc/security/pwquality.conf" "maxclassrepeat" "$MAXCLASSREPEAT"

# Set local and ssh session timeout to 48 hours (Lab Environment)
  TIMEOUT=172800

# Update TMOUT for local users in /etc/profile.d/tmout.sh
  {
    echo "# Set TMOUT to $TIMEOUT for this lab environment"
    echo "typeset -xr TMOUT=$TIMEOUT"
  } > /etc/profile.d/tmout.sh

# Update SSH settings in /etc/ssh/sshd_config.d/00-complianceascode-hardening.conf
  update_setting "/etc/ssh/sshd_config.d/00-complianceascode-hardening.conf" "ClientAliveInterval" "$TIMEOUT"
  update_setting "/etc/ssh/sshd_config.d/00-complianceascode-hardening.conf" "ClientAliveCountMax" "0"

### End STIG Softening for Lab ###


%end

# Reboot the system after installation
reboot --eject
